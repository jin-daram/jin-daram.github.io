{"componentChunkName":"component---src-pages-tags-jsx","path":"/tags/","result":{"data":{"site":{"siteMetadata":{"title":"Let's solve it"}},"allMarkdownRemark":{"group":[{"fieldValue":"NestJS","totalCount":2},{"fieldValue":"Node.js","totalCount":2},{"fieldValue":"TypeORM","totalCount":2},{"fieldValue":"개발환경","totalCount":1},{"fieldValue":"이슈","totalCount":1},{"fieldValue":"트랜잭션","totalCount":2}],"nodes":[{"excerpt":"이전 글 (NestJS 트랜잭션 적용 원리 알아보기) 에서는 NestJS와 Node.js 환경에서 TypeORM을 통해 어떤식으로  을 적용할 수 있는지 실제  코드와 함께 살펴봤다. 본 포스트에서는 typeorm-transactional을 사용하지 않고, 직접  Decorator를 구현하여 간편하게 트랜잭션을 적용하는 법을 보이겠다. Node.js의 T…","fields":{"slug":"/nestjs-tx-implement/"},"frontmatter":{"date":"June 12, 2025","update":"Jun 12, 2025","title":"NestJS @Transactional 구현하기","tags":["Node.js","NestJS","트랜잭션","TypeORM"]}},{"excerpt":"Spring Boot 에서는 다음과 같은 코드로 간단하게  을 적용할 수 있다.  자세한 적용 원리나 옵션에 대해서는 의 @Transactional Annotation에 대해 학습이 필용하지만, 위 방법으로 단순하고 간단하게 을 적용할 수 있다. 이것이 가능하게 하는 것이 바로 AOP (Aspect-Oriented Programming, 관점 지향 프로그…","fields":{"slug":"/nestjs-tx-principle/"},"frontmatter":{"date":"June 05, 2025","update":"Jun 05, 2025","title":"NestJS 트랜잭션 적용 원리 알아보기","tags":["Node.js","NestJS","트랜잭션","TypeORM"]}},{"excerpt":"어느 날, 마우스 휠 Up, Down을 통해 IntelliJ Editor의 Font Size 조절이 갑자기 되지 않았다.  옵션을 건드려봐도, Mac 자체에서 지원하는 Zoom이 될 뿐, Editor의 Font Size가 변경되지는 않았다. 해결방법 1. 손쉬운 사용 설정 켜져있는지 확인 나의 경우  에서  에 가 매핑되어 있었다.  이러한 경우  옵션을…","fields":{"slug":"/intellij-zoom-issue/"},"frontmatter":{"date":"May 15, 2025","update":"May 15, 2025","title":"IntelliJ Mouse Wheel Zoom 이슈","tags":["이슈","개발환경"]}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}